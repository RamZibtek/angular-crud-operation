{"ast":null,"code":"import { catchError } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/services/student.service\";\nexport class YourComponent {\n  constructor(http, errorHandler) {\n    this.http = http;\n    this.errorHandler = errorHandler;\n  }\n  makeHttpRequest() {\n    this.http.get(\"your-api-endpoint\").pipe(catchError(this.errorHandler.handleError) // Handle errors using the error handler service\n    ).subscribe(data => {\n      // Handle successful response\n    }, error => {\n      // Any specific error handling can be done here\n    });\n  }\n  static #_ = this.ɵfac = function YourComponent_Factory(t) {\n    return new (t || YourComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ServiceService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: YourComponent,\n    selectors: [[\"app-your-component\"]],\n    decls: 0,\n    vars: 0,\n    template: function YourComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["catchError","YourComponent","constructor","http","errorHandler","makeHttpRequest","get","pipe","handleError","subscribe","data","error","_","i0","ɵɵdirectiveInject","i1","HttpClient","i2","ServiceService","_2","selectors","decls","vars","template","YourComponent_Template","rf","ctx","encapsulation"],"sources":["/home/zibtek/Angular/angular-crud-operation/src/app/Pages/student-page/student-page.component.ts"],"sourcesContent":["// your-component.ts\nimport { Component } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError } from \"rxjs/operators\";\nimport { ServiceService } from \"src/app/services/student.service\";\n\n@Component({\n  selector: \"app-your-component\",\n  template: ` <!-- Your component template --> `,\n})\nexport class YourComponent {\n  constructor(private http: HttpClient, private errorHandler: ServiceService) {}\n\n  makeHttpRequest() {\n    this.http\n      .get(\"your-api-endpoint\")\n      .pipe(\n        catchError(this.errorHandler.handleError) // Handle errors using the error handler service\n      )\n      .subscribe(\n        (data) => {\n          // Handle successful response\n        },\n        (error) => {\n          // Any specific error handling can be done here\n        }\n      );\n  }\n}\n"],"mappings":"AAGA,SAASA,UAAU,QAAQ,gBAAgB;;;;AAO3C,OAAM,MAAOC,aAAa;EACxBC,YAAoBC,IAAgB,EAAUC,YAA4B;IAAtD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,YAAY,GAAZA,YAAY;EAAmB;EAE7EC,eAAeA,CAAA;IACb,IAAI,CAACF,IAAI,CACNG,GAAG,CAAC,mBAAmB,CAAC,CACxBC,IAAI,CACHP,UAAU,CAAC,IAAI,CAACI,YAAY,CAACI,WAAW,CAAC,CAAC;KAC3C,CACAC,SAAS,CACPC,IAAI,IAAI;MACP;IAAA,CACD,EACAC,KAAK,IAAI;MACR;IAAA,CACD,CACF;EACL;EAAC,QAAAC,CAAA,G;qBAjBUX,aAAa,EAAAY,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAblB,aAAa;IAAAmB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAAC,aAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}